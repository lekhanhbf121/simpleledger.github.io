(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{276:function(t,a,s){"use strict";s.r(a);var e=s(2),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"slpsocket"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slpsocket"}},[t._v("#")]),t._v(" SLPSocket")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("View Repo:")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/fountainhead-cash/slpockserve",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/fountainhead-cash/slpsockserve"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("SLPSockserve is a frontend API for SLPDB that provides a streaming output of new transactions. Unlike slpserve which is a similar frontend API used to fetch historical blockchain data, SLPSockserve can be used display data as it comes in.")]),t._v(" "),s("p",[t._v("Compare this project to "),s("a",{attrs:{href:"/tooling/slpstream"}},[t._v("SLPStream")]),t._v(" which may have better characteristics for your application.")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://slpsocket.fountainhead.cash/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Try it here →"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"introduction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),s("p",[t._v("SLPSocket querying is done much in the same way as with SLPDB, except in a reduced fashion. There are no "),s("code",[t._v("aggregate")]),t._v(" functions possible, only "),s("code",[t._v("find")]),t._v(". Also, only transactions will be available.. so you can query only on "),s("code",[t._v("u")]),t._v(" (unconfirmed / recent transactions) and "),s("code",[t._v("c")]),t._v(" (all SLP transactions inside a block, limited transaction information).")]),t._v(" "),s("h2",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"v"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"q"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"find"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"https://slpsocket.fountainhead.cash/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Try it here →"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);