(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{273:function(e,t,a){"use strict";a.r(t);var s=a(2),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"slpdecoder"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slpdecoder"}},[e._v("#")]),e._v(" SLPDecoder")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("View Repo:")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/blockparty-sh/cpp_slp_graph_search/tree/master/slpdecoder",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/blockparty-sh/cpp_slp_graph_search/tree/master/slpdecoder"),a("OutboundLink")],1)])]),e._v(" "),a("p",[e._v("slpdecoder provides an easy way to parse and debug SLP metadata. It can be very useful when trying to figure out why an OP_RETURN is not parsed as valid SLP.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ ./slpdecoder 6a04534c500001010747454e4553495304484f4e4b09484f4e4b20484f4e4b17544845205245414c20484f4e4b20534c5020544f4b454e4c0001004c0008000000174876e800\n")])])]),a("h4",{attrs:{id:"result"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#result"}},[e._v("#")]),e._v(" Result:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("slp: GENESIS\ntoken_type:       1\ntokenid:          0000000000000000000000000000000000000000000000000000000000000000\ntransaction_type: GENESIS\n\nticker:           HONK\nname:             HONK HONK\ndocument_uri:     THE REAL HONK SLP TOKEN\ndocument_hash:    [none]\ndecimals:         0\nhas_mint_baton:   0\nslp_amount:       100000000000\nmint_baton_vout:  0\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);